# Production Dockerfile - Combined frontend and backend
# This creates a single container that serves both the API and frontend
FROM node:22-alpine AS frontend-builder

# Build frontend
WORKDIR /app
COPY package*.json turbo.json ./
COPY apps/console/package*.json ./apps/console/
COPY packages/*/package*.json ./packages/*/
RUN npm ci --frozen-lockfile

COPY . .
RUN npm run relay
ENV NODE_ENV=production
RUN npm run build --workspace=@probo/console

# Build Go backend
FROM golang:1.23-alpine AS backend-builder

WORKDIR /app
COPY go.mod go.sum ./
RUN go mod download && go mod verify

COPY . .
RUN go generate ./pkg/server/api/console/v1

RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags='-w -s -X "main.version=production" -X "main.env=prod"' \
    -a -installsuffix cgo \
    -o probod \
    ./cmd/probod

# Final production stage
FROM alpine:3.19

# Install runtime dependencies
RUN apk --no-cache add ca-certificates tzdata nginx supervisor wget && \
    addgroup -g 1000 probo && \
    adduser -D -s /bin/sh -u 1000 -G probo probo

# Create necessary directories
RUN mkdir -p /app /var/log/supervisor /run/nginx /var/cache/nginx && \
    chown -R probo:probo /app /var/log/supervisor /run/nginx /var/cache/nginx

WORKDIR /app

# Copy backend binary and assets
COPY --from=backend-builder /app/probod ./probod
COPY --from=backend-builder /app/pkg/coredata/migrations ./migrations
COPY --from=backend-builder /app/cfg ./cfg
COPY --from=backend-builder /app/data ./data

# Copy frontend build
COPY --from=frontend-builder /app/apps/console/dist ./public

# Copy configuration files
COPY nginx.conf /etc/nginx/nginx.conf
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Change ownership
RUN chown -R probo:probo /app /etc/nginx/nginx.conf

# Switch to probo user
USER probo

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/api/health || exit 1

# Start supervisor (manages both nginx and probod)
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]